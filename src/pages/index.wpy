<style lang="less">
  input {
    border: 1 rpx solid #ccc;
    display: inline-block;
    width: 200 rpx;
    border-radius: 5 rpx;
  }

  .info {
    padding-right: 10 rpx;
  }

  .userinfo {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .userinfo-avatar {
    width: 80 rpx;
    height: 80 rpx;
    border-radius: 50%;
  }

  .userinfo-nickname {
    color: #aaa;
  }

  .slide {
    width: 640 rpx;
    display: flex;
    border: 1 rpx solid #ccc;
    font-size: 28 rpx;
    align-items: center;
    box-sizing: border-box;

    .left {
      width: 750 rpx;
      padding: 20 rpx;
    }

    .right {
      display: flex;

      .right-item {
        padding: 20 rpx 30 rpx;
        background-color: red;
        color: #fff;
      }
    }
  }
</style>
<wxs module="m1" lang="babel">
  const getTime = (time) => {
  let date = getDate(time);
  let hour = date.getHours();
  let mins = date.getMinutes();
  let sec = date.getSeconds();
  let milli = date.getMilliseconds();
  return `${hour}:${mins}:${sec}.${milli}`;
  }
  module.exports.getTime = getTime;
</wxs>
<template>
  <view>
    <view class="page" xmlns:wx="http://www.w3.org/1999/xhtml">
      <view class="page__hd">
        <view class="page__title">Form</view>
        <view class="page__desc">表单输入</view>
      </view>
      <view class="page__bd">
        <mp-form id="form" rules="{{rules}}" models="{{formData}}">
          <mp-cells title="单选列表项">
            <mp-checkbox-group prop="radio" multi="{{false}}" bindchange="radioChange">
              <mp-checkbox wx:for="{{radioItems}}" wx:key="value" label="{{item.name}}" value="{{item.value}}"
                           checked="{{item.checked}}"></mp-checkbox>
            </mp-checkbox-group>
          </mp-cells>
          <mp-cells title="复选列表项">
            <mp-checkbox-group prop="checkbox" multi="{{true}}" bindchange="checkboxChange">
              <mp-checkbox wx:for="{{checkboxItems}}" wx:key="value" label="{{item.name}}" value="{{item.value}}"
                           checked="{{item.checked}}"></mp-checkbox>
            </mp-checkbox-group>
          </mp-cells>

          <mp-cells title="表单" footer="底部说明文字底部说明文字">
            <mp-cell prop="qq" title="qq" ext-class="">
              <input bindinput="formInputChange" data-field="qq" class="weui-input" placeholder="请输入qq"/>
            </mp-cell>
            <mp-cell prop="mobile" title="手机号" ext-class=" weui-cell_vcode">
              <input bindinput="formInputChange" data-field="mobile" class="weui-input" placeholder="请输入手机号"/>
              <view slot="footer" class="weui-vcode-btn">获取验证码</view>
            </mp-cell>
            <mp-cell prop="date" title="日期" ext-class="">
              <picker data-field="date" mode="date" value="{{date}}" start="2015-09-01" end="2017-09-01"
                      bindchange="bindDateChange">
                <view class="weui-input">{{date}}</view>
              </picker>
            </mp-cell>
            <mp-cell prop="vcode" title="验证码" ext-class=" weui-cell_vcode">
              <input bindinput="formInputChange" data-field="vcode" class="weui-input" placeholder="请输入验证码"/>
              <image slot="footer" class="weui-vcode-img" src="../images/vcode.jpg" style="width: 108px"></image>
            </mp-cell>
          </mp-cells>
          <mp-cells title="提交后表单项报错">
            <mp-cell show-error prop="idcard" title="卡号" ext-class="">
              <input bindinput="formInputChange" data-field="idcard" class="weui-input" placeholder="请输入卡号"/>
            </mp-cell>
          </mp-cells>
        </mp-form>

        <view class="weui-cells__title">开关</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_switch">
            <view class="weui-cell__bd">标题文字</view>
            <view class="weui-cell__ft">
              <switch checked/>
            </view>
          </view>
        </view>

        <view class="weui-cells__title">文本框</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
            <view class="weui-cell__bd">
              <input class="weui-input" placeholder="请输入文本"/>
            </view>
          </view>
        </view>

        <view class="weui-cells__title">文本域</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell">
            <view class="weui-cell__bd">
              <textarea class="weui-textarea" placeholder="请输入文本" style="height: 3.3em"/>
              <view class="weui-textarea-counter">0/200</view>
            </view>
          </view>
        </view>

        <view class="weui-cells__title">选择</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_select">
            <view class="weui-cell__hd" style="width: 105px">
              <picker bindchange="bindCountryCodeChange" value="{{countryCodeIndex}}" range="{{countryCodes}}">
                <view class="weui-select">{{countryCodes[countryCodeIndex]}}</view>
              </picker>
            </view>
            <view class="weui-cell__bd weui-cell__bd_in-select-before">
              <input class="weui-input" placeholder="请输入号码"/>
            </view>
          </view>
        </view>

        <view class="weui-cells__title">选择</view>
        <view class="weui-cells weui-cells_after-title">
          <view class="weui-cell weui-cell_select">
            <view class="weui-cell__bd">
              <picker bindchange="bindAccountChange" value="{{accountIndex}}" range="{{accounts}}">
                <view class="weui-select">{{accounts[accountIndex]}}</view>
              </picker>
            </view>
          </view>
          <view class="weui-cell weui-cell_select">
            <view class="weui-cell__hd weui-cell__hd_in-select-after">
              <view class="weui-label">国家/地区</view>
            </view>
            <view class="weui-cell__bd">
              <picker bindchange="bindCountryChange" value="{{countryIndex}}" range="{{countries}}">
                <view class="weui-select weui-select_in-select-after">{{countries[countryIndex]}}</view>
              </picker>
            </view>
          </view>
        </view>

        <checkbox-group bindchange="bindAgreeChange">
          <label class="weui-agree" for="weuiAgree">
            <view class="weui-agree__text">
              <checkbox class="weui-agree__checkbox" id="weuiAgree" value="agree" checked="{{isAgree}}"/>
              <view class="weui-agree__checkbox-icon">
                <icon class="weui-agree__checkbox-icon-check" type="success_no_circle" size="9"
                      wx:if="{{isAgree}}"></icon>
              </view>
              阅读并同意
              <navigator url="" class="weui-agree__link">《相关条款》</navigator>
            </view>
          </label>
        </checkbox-group>

        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" bindtap="submitForm">确定</button>
        </view>
      </view>
       <view class="weui-uploader">
      <view class="img-v weui-uploader__bd">
        <view class='pic' wx:for="{{imgs}}" wx:for-item="item" wx:key="*this">
          <image class='weui-uploader__img '
                 src="{{item}}"
                 data-index="{{index}}" mode="aspectFill" bindtap="previewImg">
            <icon type='cancel' class="delete-btn" data-index="{{index}}" catchtap="deleteImg"></icon>
          </image>
        </view>

        <!-- 用来提示用户上传图片 -->
        <view class="weui-uploader__input-box pic" bindtap="chooseImg"></view>
      </view>
      <button class="weui-btn weui-btn_primary" @tap="chooseImg">上传</button>
  
   
  </view>

</template>

<script>
  import wepy from '@wepy/core'
  import eventHub from '../common/eventHub'
  import { mapState } from '@wepy/x'
  import store from '../store'
  import testMixin from '../mixins/test'

  wepy.page({
      store,
      config: {
        navigationBarTitleText: 'test',
        useExtendedLib: {
          'weui': true
        },
      },

      hooks: {
        // Page 级别 hook, 只对当前 Page 的 setData 生效。
        'before-setData': function(dirty) {
          if (Math.random() < 0.2) {
            console.log('setData canceled')
            return false // Cancel setData
          }
          dirty.time = +new Date()
          return dirty
        }
      },

      mixins: [testMixin],

      data: {
        inputmodel: 'v-model',
        mynum: 20,
        userInfo: {
          nickName: '加载中...'
        },
        currentTime: +new Date(),
        setTimeoutTitle: '标题三秒后会被修改',
        count: 0,
        netrst: '',
        groupList: [
          {
            id: 1,
            name: '点击改变',
            list: [
              {
                childid: '1.1',
                childname: '子项，点我改变'
              }, {
                childid: '1.2',
                childname: '子项，点我改变'
              }, {
                childid: '1.3',
                childname: '子项，点我改变'
              }
            ]
          },
          {
            id: 2,
            name: '点击改变',
            list: [
              {
                childid: '2.1',
                childname: '子项，点我改变'
              }, {
                childid: '2.2',
                childname: '子项，点我改变'
              }, {
                childid: '2.3',
                childname: '子项，点我改变'
              }
            ]
          },
          {
            id: 3,
            name: '点击改变',
            list: [
              {
                childid: '3.1',
                childname: '子项，点我改变'
              }
            ]
          }
        ],
        imgs: [],
        placeholder: '请选择',
        array: ['发电机', '充电器', '引擎动力', '其他'],
        objectArray: [
          {
            id: 0,
            name: '发电机'
          },
          {
            id: 1,
            name: '充电器'
          },
          {
            id: 2,
            name: '引擎动力'
          },
          {
            id: 3,
            name: '其他'
          }
        ],

        multiIndex: [0, 0, 0],
        date: '2016-09-01',
        time: '12:01',
        region: ['广东省', '广州市', '海珠区'],
        customItem: '全部',
        showTopTips: false,

        radioItems: [
          { name: 'cell standard', value: '0', checked: true },
          { name: 'cell standard', value: '1' }
        ],
        checkboxItems: [
          { name: 'standard is dealt for u.', value: '0', checked: true },
          { name: 'standard is dealicient for u.', value: '1' }
        ],
        items: [
          { name: 'USA', value: '美国' },
          { name: 'CHN', value: '中国', checked: 'true' },
          { name: 'BRA', value: '巴西' },
          { name: 'JPN', value: '日本' },
          { name: 'ENG', value: '英国' },
          { name: 'TUR', value: '法国' }
        ],

        date: '2016-09-01',
        time: '12:01',

        countryCodes: ['+86', '+80', '+84', '+87'],
        countryCodeIndex: 0,

        countries: ['中国', '美国', '英国'],
        countryIndex: 0,

        accounts: ['微信号', 'QQ', 'Email'],
        accountIndex: 0,

        isAgree: false,
        formData: {},
        rules: [{
          name: 'radio',
          rules: { required: true, message: '单选列表是必选项' }
        }, {
          name: 'checkbox',
          rules: { required: true, message: '多选列表是必选项' }
        }, {
          name: 'qq',
          rules: { required: true, message: 'qq必填' }
        }, {
          name: 'mobile',
          rules: [{ required: true, message: 'mobile必填' }, { mobile: true, message: 'mobile格式不对' }]
        }, {
          name: 'vcode',
          rules: { required: true, message: '验证码必填' }
        }, {
          name: 'idcard',
          rules: { required: true, message: 'idcard必填' }
        }]
      },

      computed: {
        ...mapState(['counter']),
        testcomputed() {
          return 'computed - ' + this.mynum
        }
      },

      methods: {
        handleViewTap() {
          console.log('handleVieTap clicked')
        },
        tap() {
          // eslint-disable-next-line no-throw-literal
          throw 'can not go here'
        },
        plus() {
          this.mynum++
        },
        toast() {
          let promise = this.$invoke('toast', 'show', {
            title: '自定义标题',
            img: 'https://raw.githubusercontent.com/kiinlam/wetoast/master/images/star.png'
          })

          promise.then((d) => {
            console.log('toast done')
          })
        },
        mixintap() {
          console.log('do noting from ' + this.$is)
        },
        communicate() {
          let counters = this.$children.filter((com) => com.$is === 'components/counter')

          // Get children counter
          counters[0].num++
          counters[1].num--

          eventHub.$emit('app-launch', { a: 1 }, { b: 2 })
        },
        request() {
          let self = this
          let i = 10
          let map = ['MA==', 'MQo=', 'Mg==', 'Mw==', 'NA==', 'NQ==', 'Ng==', 'Nw==', 'OA==', 'OQ==']
          while (i--) {
            wx.request({
              url: 'https://www.madcoder.cn/tests/sleep.php?time=1&t=css&c=' + map[i] + '&i=' + i,
              success: function(d) {
                if (d.statusCode !== 200) {
                  self.netrst += d.statusCode + '.'
                } else {
                  self.netrst += d.data + '.'
                }
              }
            })
          }
        },
        counterEmit(num) {
          console.log(`${this.$is} receive event, the number is: ${num}`)
        },
        chooseImg: function(e) {
          let that = this
          let imgs = this.imgs
          if (imgs.length >= 9) {
            // this.setData({
            //   lenMore: 1
            // });
            // setTimeout(function () {
            //   that.setData({
            //     lenMore: 0
            //   });
            // }, 2500);
            return false
          }
          wx.chooseImage({
            // count: 1, // 默认9
            sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有
            sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
            success: function(res) {
              // 返回选定照片的本地文件路径列表，tempFilePath可以作为img标签的src属性显示图片
              let tempFilePaths = res.tempFilePaths
              let imgs = that.imgs
              // console.log(tempFilePaths + '----');
              for (let i = 0; i < tempFilePaths.length; i++) {
                if (imgs.length >= 9) {
                  that.imgs = imgs
                  return false
                } else {
                  imgs.push(tempFilePaths[i])
                }
              }
              // console.log(imgs);
              that.imgs = imgs
            }
          })
        },
        // 删除图片
        deleteImg: function(e) {
          let imgs = this.imgs
          let index = e.currentTarget.dataset.index
          imgs.splice(index, 1)
          this.imgs = imgs
        },
        // 预览图片
        previewImg: function(e) {
          // 获取当前图片的下标
          let index = e.currentTarget.dataset.index
          // 所有图片
          let imgs = this.imgs
          wx.previewImage({
            // 当前显示图片
            current: imgs[index],
            // 所有图片
            urls: imgs
          })
        },
        bindRegionChange(e) {
          console.log('picker发送选择改变，携带值为', e.detail.value)
          this.region = e.detail.value
        },
        radioChange: function(e) {
          console.log('radio发生change事件，携带value值为：', e.detail.value)

          var radioItems = this.data.radioItems
          for (var i = 0, len = radioItems.length; i < len; ++i) {
            radioItems[i].checked = radioItems[i].value == e.detail.value
          }

          this.setData({
            radioItems: radioItems,
            [`formData.radio`]: e.detail.value
          })
        },
        checkboxChange: function(e) {
          console.log('checkbox发生change事件，携带value值为：', e.detail.value)

          var checkboxItems = this.data.checkboxItems, values = e.detail.value
          for (var i = 0, lenI = checkboxItems.length; i < lenI; ++i) {
            checkboxItems[i].checked = false

            for (var j = 0, lenJ = values.length; j < lenJ; ++j) {
              if (checkboxItems[i].value == values[j]) {
                checkboxItems[i].checked = true
                break
              }
            }
          }

          this.setData({
            checkboxItems: checkboxItems,
            [`formData.checkbox`]: e.detail.value
          })
        },
        bindDateChange: function(e) {
          this.setData({
            date: e.detail.value,
            [`formData.date`]: e.detail.value
          })
        },
        formInputChange(e) {
          const { field } = e.currentTarget.dataset
          this.setData({
            [`formData.${field}`]: e.detail.value
          })
        },
        bindTimeChange: function(e) {
          this.setData({
            time: e.detail.value
          })
        },
        bindCountryCodeChange: function(e) {
          console.log('picker country code 发生选择改变，携带值为', e.detail.value)

          this.setData({
            countryCodeIndex: e.detail.value
          })
        },
        bindCountryChange: function(e) {
          console.log('picker country 发生选择改变，携带值为', e.detail.value)

          this.setData({
            countryIndex: e.detail.value
          })
        },
        bindAccountChange: function(e) {
          console.log('picker account 发生选择改变，携带值为', e.detail.value)

          this.setData({
            accountIndex: e.detail.value
          })
        },
        bindAgreeChange: function(e) {
          this.setData({
            isAgree: !!e.detail.value.length
          })
        },
        submitForm() {
          this.selectComponent('#form').validate((valid, errors) => {
            console.log('valid', valid, errors)
            if (!valid) {
              const firstError = Object.keys(errors)
              if (firstError.length) {
                this.setData({
                  error: errors[firstError[0]].message
                })

              }
            } else {
              wx.showToast({
                title: '校验通过'
              })
            }
          })
        }

      }
    },

    created()
  {
    let self = this
    self.currentTime = +new Date()

    self.setTimeoutTitle = '标题三秒后会被修改'
    setTimeout(() => {
      self.setTimeoutTitle = '到三秒了'
    }, 3000)

    wx.getUserInfo({
      success(res) {
        self.userInfo = res.userInfo
      }
    })
  }
  })
</script>
<config>
  {
    navigationBarTitleText: 'WePY 2.0 Feature Demo',
    "component": true,
    usingComponents: {
      panel: '~@/components/panel',
      counter: '~counter',
      list: '../components/list',
      group: '../components/group',
      "slide-view": "module:miniprogram-slide-view",
      mpdialog: '/miniprogram_npm/weui-miniprogram/dialog/dialog',
      "mp-toptips": "../components/toptips/toptips",
      "mp-cells": "../components/cells/cells",
      "mp-cell": "../components/cell/cell",
      "mp-checkbox": "../components/checkbox/checkbox",
      "mp-checkbox-group": "../components/checkbox-group/checkbox-group",
      "mp-form": "../components/form/form"
    }
  }
</config>
